package main;

public class Pessoa implements Comparable<Pessoa>{

	private String agencia;
	private String nConta;
	private String nome;
	private String cpf;
	
	public Pessoa(){
		this.agencia = "";
		this.nConta = "";
		this.nome = "";
		this.cpf = "";
	}
	
	public Pessoa(String inAgencia, String inNConta, String inNome, String inCpf){
		this.agencia = inAgencia;
		this.nConta = inNConta;
		this.nome = inNome;
		this.cpf = inCpf;
	}
	
	public String getAgencia() {
		return agencia;
	}

	public void setAgencia(String agencia) {
		this.agencia = agencia;
	}

	public String getnConta() {
		return nConta;
	}

	public void setnConta(String nConta) {
		this.nConta = nConta;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getCpf() {
		return cpf;
	}

	public void setCpf(String cpf) {
		this.cpf = cpf;
	}

	@Override
	public int compareTo(Pessoa other) {
		
		int out = this.nome.compareToIgnoreCase(other.nome);
		
		if(out == 0)
			out = this.cpf.compareTo(other.cpf);
		
		return out;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((agencia == null) ? 0 : agencia.hashCode());
		result = prime * result + ((cpf == null) ? 0 : cpf.hashCode());
		result = prime * result + ((nConta == null) ? 0 : nConta.hashCode());
		result = prime * result + ((nome == null) ? 0 : nome.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Pessoa other = (Pessoa) obj;
		if (agencia == null) {
			if (other.agencia != null)
				return false;
		} else if (!agencia.equals(other.agencia))
			return false;
		if (cpf == null) {
			if (other.cpf != null)
				return false;
		} else if (!cpf.equals(other.cpf))
			return false;
		if (nConta == null) {
			if (other.nConta != null)
				return false;
		} else if (!nConta.equals(other.nConta))
			return false;
		if (nome == null) {
			if (other.nome != null)
				return false;
		} else if (!nome.equals(other.nome))
			return false;
		return true;
	}

	
	
}
